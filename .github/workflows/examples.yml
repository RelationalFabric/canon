name: Examples Build and Deploy

on:
  push:
    branches-ignore:
      - main
      - develop
    paths:
      - 'examples/**'
      - scripts/generate-examples-docs.ts
      - package.json
      - 'tsconfig*.json'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy-examples:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run linting and type checking
        run: npm run check

      - name: Run main tests
        run: npm test

      - name: Run examples tests
        run: npm run test:examples

      - name: Run examples type checking (may have errors)
        run: npm run check:examples || true

      - name: Generate examples documentation
        run: npm run examples:generate-docs

      - name: Check for documentation changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Files changed:"
            git status --porcelain
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push documentation changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/examples/README.md
          git commit -m "docs: auto-update examples documentation

          - Updated examples documentation from source files
          - Generated automatically from example files
          - Includes all 7 examples with comprehensive coverage"
          git push

      - name: Run individual examples
        run: |
          echo "=== Running Individual Examples ==="

          echo "1. Basic ID Axiom Example:"
          npx tsx examples/01-basic-id-axiom.ts

          echo "2. Module Style Canon Example:"
          npx tsx examples/02-module-style-canon/usage.ts

          echo "3. Multi-Axiom Canon Example:"
          npx tsx examples/03-multi-axiom-canon.ts

          echo "4. Format Conversion Example:"
          npx tsx examples/04-format-conversion-examples.ts

          echo "5. Error Handling Example:"
          npx tsx examples/05-error-handling-and-edge-cases.ts

          echo "6. Real-World Business Scenarios Example:"
          npx tsx examples/06-real-world-business-scenarios.ts

          echo "7. Custom Axioms Example:"
          npx tsx examples/07-custom-axioms-example.ts

      - name: Summary
        run: |
          echo "=== Examples Build Summary ==="
          echo "✅ All examples executed successfully"
          echo "✅ Documentation generated and updated"
          echo "✅ All tests passed"
          echo "✅ Linting and type checking passed"
          echo ""
          echo "Examples covered:"
          echo "- Basic ID Axiom usage"
          echo "- Module-style canon definition"
          echo "- Multi-axiom canon with all core axioms"
          echo "- Format conversion and cross-format compatibility"
          echo "- Error handling and edge cases"
          echo "- Real-world business scenarios"
          echo "- Custom axioms definition and usage"
