name: PR Checks

on:
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npx tsc --noEmit --pretty false 2>&1 | tee typescript.log || true

      - name: Setup reviewdog for TypeScript
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Report TypeScript errors with reviewdog
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -s typescript.log ]; then
            cat typescript.log | reviewdog -f=tsc -name="TypeScript" -reporter=github-pr-review -level=error -fail-level=error
          fi

      - name: Run ESLint with reviewdog
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: .
          fail_on_error: false
          filter_mode: nofilter

      - name: Run full checks
        run: npm run checks

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated dependencies
        run: npm outdated || true

      - name: Check for unused dependencies
        run: npx depcheck --ignores="@types/*,vitest,tsx,chokidar-cli,npm-run-all,adr-tools,vitepress" || true

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: unittests
          fail_ci_if_error: false

  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, security-audit, dependency-check, coverage]
    if: always()

    steps:
      - name: Check if all jobs passed
        run: |
          if [ "${{ needs.lint-and-typecheck.result }}" != "success" ] || \
             [ "${{ needs.security-audit.result }}" != "success" ] || \
             [ "${{ needs.dependency-check.result }}" != "success" ] || \
             [ "${{ needs.coverage.result }}" != "success" ]; then
            echo "❌ One or more checks failed"
            exit 1
          fi
          echo "✅ All checks passed successfully!"
